let day = 7

(* open Util *)
(* let construct_tree in_ch = *)
(*   let rec aux node seq = *)
(*     match seq () with *)
(*     | Seq.Nil -> node *)
(*     | Cons (line, seq) -> ( *)
(*         match line |> String.split_on_char ' ' with *)
(*         | [ "$"; "cd"; ".." ] -> () *)
(*         | [ "$"; "cd"; path ] -> () *)
(*         | [ "$"; "ls" ] -> () *)
(*         | [ "dir"; name ] -> () *)
(*         | [ name; size ] -> *)
(*             let size = int_of_string size in *)
(*             () *)
(*         | _ -> invalid_arg (Printf.sprintf "Unexpected line \"%s\"" line)) *)
(*   in *)
(*   aux () (line_seq in_ch) *)
(* *)
let part_a _in = ()
let part_b _in = ()
